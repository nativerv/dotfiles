#!/bin/sh
# Author: nrv
# Description: daemon that narrates pactl device mute state changes

set -eu

: "${XDG_DATA_HOME:="${HOME}/.local/share"}"

upper() {
  printf '%s' "${1}" | tr '[:lower:]' '[:upper:]'
}

get_mute() {
  device="@DEFAULT_$(upper "${1}")@"
  pactl get-"${1}"-mute "${device}" | cut -d' ' -f2
}

# Guard for argument
case "${1}" in
  'source') ;;
  'sink') ;;
  *) printf '%s: usage: %s source|sink' "${0}" "${0}"
     exit 1
     ;;
esac

prev_state="$(get_mute "${1}")"

pactl subscribe | grep --line-buffered "${1}" | while read -r _; do
  new_state="$(get_mute "${1}")"
  # Guard for state not changed
  [ "${new_state}" = "${prev_state}" ] && continue

  type="${1}"

  # Play the thing
  case "${new_state}" in
    'yes') paplay "${XDG_DATA_HOME}/speech/${type}-muted.mp3" & ;;
    'no') paplay "${XDG_DATA_HOME}/speech/${type}-unmuted.mp3" & ;;
    *) notify-send 'Pulseaudio state narrator daemon' "Critical error: state is not either 'yes' or 'no' (state: ${new_state})" ;;
  esac

  # Set new prev state
  prev_state="${new_state}"
done
