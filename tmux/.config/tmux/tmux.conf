# Global `tmux` dirs: config, data, plugins, plugin data
TMUX_CONFIG_HOME="${XDG_CONFIG_HOME}/tmux"
TMUX_DATA_HOME="${XDG_DATA_HOME}/tmux"
TMUX_PLUGIN_MANAGER_PATH="${TMUX_DATA_HOME}/plugins/"
TMUX_PLUGIN_MANAGER_DATA_PATH="${TMUX_DATA_HOME}/data"

# Set plugin data dirs

# tmux-resurrect
run "tmux set -g @resurrect-dir '${TMUX_PLUGIN_MANAGER_DATA_PATH}/resurrect'" # Hack to use env var in @resurrect-dir

# Bootstrap TPM (install it if not installed)
if "test ! -d ${TMUX_DATA_HOME}/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ${TMUX_DATA_HOME}/plugins/tpm && ${TMUX_DATA_HOME}/plugins/tpm/bin/install_plugins'"

# Remap prefix
unbind C-b
set-option -g prefix M-`
bind-key M-a send-prefix

# Prevent tmux from spawning login shells
set -g default-command "${SHELL}"

# Vim mode
setw -g mode-keys vi

# Remove delay when switching between Vim modes.
set -sg escape-time 0

# Add a bit more scroll history in the buffer.
set -g history-limit 50000

# Enable color support inside of tmux
# `xterm-256color` => no (colored/any) undercurles in `nvim`
set -g default-terminal "tmux-256color"
# `xterm-kitty`    => also works
set -ga terminal-overrides ",*256*:Tc"

# Enable undercurles support inside of tmux
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable colored underlines (and undercurles) support inside of tmux
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Ensure window titles get renamed automatically.
setw -g automatic-rename

# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows on

# Enable full mouse support.
set -g mouse on

# Disable annoying resizing when attached to multiple terminals (FIXME: not working)
set -g aggressive-resize off

# Reload the tmux config.
bind-key r source-file "${TMUX_CONFIG_HOME}/tmux.conf"\; display-message '[Config reloaded]' 

# New windows/panes in current directory instead of initial directory
# from which tmux is started
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# Modifier (M- or C-) MUST be synced across all bindings here AND in Vim.
# See: https://github.com/aserowy/tmux.nvim 
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Switch panes
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'M-р' if-shell "$is_vim" 'send-keys M-р' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-о' if-shell "$is_vim" 'send-keys M-о' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-л' if-shell "$is_vim" 'send-keys M-л' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-д' if-shell "$is_vim" 'send-keys M-д' { if -F '#{pane_at_right}' '' 'select-pane -R' }
# Resize panes
bind-key M-h if-shell "$is_vim" 'send-keys M-`; send-keys M-h' { resize-pane -L 5 }
bind-key M-j if-shell "$is_vim" 'send-keys M-`; send-keys M-j' { resize-pane -D 5 }
bind-key M-k if-shell "$is_vim" 'send-keys M-`; send-keys M-k' { resize-pane -U 5 }
bind-key M-l if-shell "$is_vim" 'send-keys M-`; send-keys M-l' { resize-pane -R 5 }
bind-key M-р if-shell "$is_vim" 'send-keys M-`; send-keys M-р' { resize-pane -L 5 }
bind-key M-о if-shell "$is_vim" 'send-keys M-`; send-keys M-о' { resize-pane -D 5 }
bind-key M-л if-shell "$is_vim" 'send-keys M-`; send-keys M-л' { resize-pane -U 5 }
bind-key M-д if-shell "$is_vim" 'send-keys M-`; send-keys M-д' { resize-pane -R 5 }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Vim mode selection keys
bind-key -T copy-mode-vi 'v'   send -X begin-selection                              
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle  

# Vim mode u/d keys
bind-key -T copy-mode-vi 'u'   send -X halfpage-up                              
bind-key -T copy-mode-vi 'd'   send -X halfpage-down

# When copying, also copy with the `yank` script
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'yank'
# TODO: add yanking to primary on selection (with keyboard or mouse)
# NOTE: the below does not work with -p, but **does** without (just 'yank')!
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'yank -p'

# Enable OSC52 - cross-platform and cross-ssh o
# clipboard support powered by the terminal
# Requires terminal to support OSC52 (xterm, kitty, alacritty, st...)
# See:
#  https://medium.com/free-code-camp/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
#  https://github.com/tmux/tmux/issues/3192
#  https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
#  https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b?permalink_comment_id=2636667#gistcomment-2636667
# Note that the following is no longer needed at least as of tmux ccc9dc3,
# which is tagged 3.3a, which is for some unimaginable reason is stated as a
# version but the patch seems to not be present/working in both(!) Arch Linux
# repos as well as nixpkgs-unstable as of Fri 03 Mar 2023 11:04:37 AM +00
#set -ag terminal-overrides "*:XT:Ms=\\033]52;c;%p2%s\\a"
set -g set-clipboard on

# Shortcut for copy-mode
bind-key -n 'M-;' copy-mode

# Easymotion
set -g @easy-motion-prefix "f"
set -g @easy-motion-default-motion "bd-w"

# Set window/pane index 1-based for easy switching
set -g base-index 1
setw -g pane-base-index 1

# Navigation between sessions
bind-key -n 'M-9' switch -p \; run tmux-display-session-name
bind-key -n 'M-0' switch -n \; run tmux-display-session-name

# Navigation between windows
bind-key -n 'M-n' select-window -p
bind-key -n 'M-m' select-window -n

# Reorder windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Highlight current window
setw -g window-status-current-style fg=black,bg=yellow
setw -g window-status-separator ''
setw -g window-status-current-format ' #W '
setw -g window-status-format ' #W '

# Set terminal title when app requests it
set-option -g set-titles on
set-option -g set-titles-string '#{?pane_title,#{pane_title},#{client_termname}}'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'IngoMeyer441/tmux-easy-motion'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "${TMUX_DATA_HOME}/plugins/tpm/tpm"

# vim:ft=bash
