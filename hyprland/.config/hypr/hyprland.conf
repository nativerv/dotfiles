
########################################################################################
# NRV's Hyprland config
########################################################################################

#
# I compiled all of the options from the 738ec90 (latest master at the time) here.
# See latest master/changelog for missing/new ones.
#

# TODO: name workspaces
# TODO: special workspaces

### MAIN VARIABLES                           =======================================

# The primary modifier key
$myMod = SUPER

# Terminal that i use on this compositor
$myTerminal = footclient

# Windowing layout
$myLayout = dwindle

### MONITORS                                 =======================================

# For more, see https://wiki.hyprland.org/Configuring/Monitors/

#       NAME RESOLUTION POSITION SCALE
monitor=   , preferred, auto,    1

### ENVIRONMENT                              =======================================

env = QT_QPA_PLATFORM,wayland
env = MOZ_ENABLE_WAYLAND,1
env = XDG_CURRENT_DESKTOP,Hyprland:wlroots:gnome
env = XDG_SESSION_TYPE,wayland
env = TERMCMD,footclient
env = TERMINAL,footclient
env = MENU,bemenu
env = BEMENU_BACKEND,wayland

# Tell current `session` the stuff.
# FIXME: hardcoded session name
exec-once = session -s tty1 set ENVRUND_HOME=${XDG_RUNTIME_DIR}/envrund/tty1 && session -s tty1 import HYPRLAND_INSTANCE_SIGNATURE WAYLAND_DISPLAY DISPLAY XDG_CURRENT_DESKTOP XDG_SESSION_TYPE TERMINAL TERMCMD QT_QPA_PLATFORM MENU BEMENU_BACKEND && systemctl --user start graphical-session@tty1.target
exec-once = foot --server --print-pid ${XDG_RUNTIME_DIR}/foot-tty1.pid # FIXME: sticked it here because window swallowing does not work with systemd because of indirection, cgroups and stuff

### OPTIONS                                  =======================================

# For all categories and variables, see https://wiki.hyprland.org/Configuring/Variables/

exec = hyprctl keyword source ${XDG_CONFIG_HOME}/hypr/hyprland-animations.conf

general {
  sensitivity = 1.0                           # [default: 1.0]        [type: float]    Mouse sensitivity (legacy, may cause bugs if not 1, prefer input:sensitivity)
  border_size = 2                             # [default: 1]          [type: int]      Size of the border around windows
  no_border_on_floating = false               # [default: false]      [type: bool]     Disable borders for floating windows
  gaps_in = 5                                 # [default: 5]          [type: int]      Gaps between windows
  gaps_out = 10                               # [default: 20]         [type: int]      Gaps between windows and monitor edges
  col.inactive_border = rgba(59595933)        # [default: 0xffffffff] [type: gradient] Border color for inactive windows
  col.active_border = 0xff444444              # [default: 0xff444444] [type: gradient] Border color for the active window
  # col.active_border = rgba(1affffee)
  col.group_border = 0x66777700               # [default: 0x66777700] [type: gradient] Inactive (out of focus) group border color
  col.group_border_active = 0x66ffff00        # [default: 0x66ffff00] [type: gradient] Active group border color
  col.group_border_locked = 0x66775500        # [default: 0x66775500] [type: gradient] Inactive locked group border color
  col.group_border_locked_active = 0x66ff5500 # [default: 0x66ff5500] [type: gradient] Active locked group border color
  cursor_inactive_timeout = 0                 # [default: 0]          [type: int]      In seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never.
  layout = $myLayout                          # [default: dwindle]    [type: str]      Which layout to use. (Available: dwindle, master)
  no_cursor_warps = false                     # [default: false]      [type: bool]     If true, will not warp the cursor in many cases (focusing, keybinds, etc)
  no_focus_fallback = false                   # [default: false]      [type: bool]     If true, will not fall back to the next available window when moving focus in a direction where no window was found
  apply_sens_to_raw = false                   # [default: false]      [type: bool]     If on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games) NOTICE: really not recommended.
  resize_on_border = false                    # [default: false]      [type: bool]     Enables resizing windows by clicking and dragging on borders and gaps
  extend_border_grab_area = 15                # [default: 15]         [type: int]      Extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.
  hover_icon_on_border = true                 # [default: true]       [type: bool]     Show a cursor icon when hovering over borders, only used when general:resize_on_border is on.
}

decoration {
  rounding = 0                  # [default: 0]          [type: int]   Rounded corners’ radius (in layout px)
  multisample_edges = true      # [default: true]       [type: bool]  Enable antialiasing (no-jaggies) for rounded corners
  active_opacity = 1.0          # [default: 1.0]        [type: float] Opacity of active windows. (0.0 - 1.0)
  inactive_opacity = 1.0        # [default: 1.0]        [type: float] Opacity of inactive windows. (0.0 - 1.0)
  fullscreen_opacity = 1.0      # [default: 1.0]        [type: float] Opacity of fullscreen windows. (0.0 - 1.0)
  blur = false                  # [default: true]       [type: bool]  Enable kawase window background blur
  blur_size = 2                 # [default: 8]          [type: int]   Blur size (distance)
  blur_passes = 1               # [default: 1]          [type: int]   The amount of passes to perform
  blur_ignore_opacity = false   # [default: false]      [type: bool]  Make the blur layer ignore the opacity of the window
  blur_new_optimizations = true # [default: true]       [type: bool]  Whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.
  blur_xray = false             # [default: false]      [type: bool]  If enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.
  drop_shadow = false           # [default: true]       [type: bool]  Enable drop shadows on windows
  shadow_range = 4              # [default: 4]          [type: int]   Shadow range (“size”) in layout px
  shadow_render_power = 3       # [default: 3]          [type: int]   (1 - 4), in what power to render the falloff (more power, the faster the falloff)
  shadow_ignore_window = true   # [default: true]       [type: bool]  If true, the shadow will not be rendered behind the window itself, only around it.
  col.shadow = rgba(1a1a1aee)   # [default: 0xee1a1a1a] [type: color] Shadow’s color. Alpha dictates shadow’s opacity.
  #col.shadow_inactive = unset   # [default: unset]      [type: color] Inactive shadow color. (if not set, will fall back to col.shadow)
  shadow_offset = [0, 0]        # [default: [0, 0]]     [type: vec2]  Shadow’s rendering offset.
  shadow_scale = 1.0            # [default: 1.0]        [type: float] Shadow’s scale. 0.0 - 1.0
  dim_inactive = false          # [default: false]      [type: bool]  Enables dimming of inactive windows
  dim_strength = 0.5            # [default: 0.5]        [type: float] How much inactive windows should be dimmed, 0.0 - 1.0
  dim_special = 0.2             # [default: 0.2]        [type: float] How much to dim the rest of the screen by when a special workspace is open. 0.0 - 1.0
  dim_around = 0.4              # [default: 0.4]        [type: float] How much the dimaround window rule should dim by. 0.0 - 1.0
  screen_shader =               # [default: [[Empty]]]  [type: str]   A path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.
}

input {
  # For per-device config, see https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs
  kb_model =                             # [default: [[Empty]]] [type: str]   Appropriate XKB keymap parameter. See the note below.
  kb_layout = us,ru                      # [default: us]        [type: str]   Appropriate XKB keymap parameter
  kb_variant =                           # [default: [[Empty]]] [type: str]   Appropriate XKB keymap parameter
  kb_options = caps:escape,grp:switch    # [default: [[Empty]]] [type: str]   Appropriate XKB keymap parameter
  kb_rules =                             # [default: [[Empty]]] [type: str]   Appropriate XKB keymap parameter
  kb_file =                              # [default: [[Empty]]] [type: str]   If you prefer, you can use a path to your custom .xkb file.
  numlock_by_default = false             # [default: false]     [type: bool]  Engage numlock by default.
  repeat_rate = 40                       # [default: 25]        [type: int]   The repeat rate for held-down keys, in repeats per second.
  repeat_delay = 400                     # [default: 600]       [type: int]   Delay before a held-down key is repeated, in milliseconds.
  sensitivity = 0.0                      # [default: 0.0]       [type: float] Sets the mouse input sensitivity. Value will be clamped to the range -1.0 to 1.0. libinput#pointer-acceleration
  accel_profile =                        # [default: [[Empty]]] [type: str]   Sets the cursor acceleration profile. Can be one of adaptive, flat. Can also be custom, see below. Leave empty to use libinput’s default mode for your input device. libinput#pointer-acceleration
  force_no_accel = false                 # [default: false]     [type: bool]  Force no cursor acceleration. This bypasses most of your pointer settings to get as raw of a signal as possible. Enabling this is not recommended due to potential cursor desynchronization.
  left_handed = false                    # [default: false]     [type: bool]  Switches RMB and LMB
  scroll_method =                        # [default: [[Empty]]] [type: str]   Sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll. libinput#scrolling
  scroll_button = 0                      # [default: 0]         [type: int]   Sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default.
  natural_scroll = false                 # [default: false]     [type: bool]  Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar.
  follow_mouse = 1                       # [default: 1]         [type: int]   (0/1/2/3) Specify if and how cursor movement should affect window focus. See the note below.
  mouse_refocus = true                   # [default: true]      [type: bool]  If disabled and follow_mouse=1 then mouse focus will not switch to the hovered window unless the mouse crosses a window boundary.
  float_switch_override_focus = 1        # [default: 1]         [type: int]   If enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches.

  touchpad {
    disable_while_typing = true     # [default: true]      [type: bool]  Disable the touchpad while typing.
    natural_scroll = false          # [default: false]     [type: bool]  Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar.
    scroll_factor = 1.0             # [default: 1.0]       [type: float] Multiplier applied to the amount of scroll movement.
    middle_button_emulation = false # [default: false]     [type: bool]  Sending LMB and RMB simultaneously will be interpreted as a middle click. This disables any touchpad area that would normally send a middle click based on location. libinput#middle-button-emulation
    tap_button_map =                # [default: [[Empty]]] [type: str]   Sets the tap button mapping for touchpad button emulation. Can be one of lrm (default) or lmr (Left, Middle, Right Buttons).
    clickfinger_behavior = false    # [default: false]     [type: bool]  Button presses with 1, 2, or 3 fingers will be mapped to LMB, RMB, and MMB respectively. This disables interpretation of clicks based on location on the touchpad. libinput#clickfinger-behavior
    tap-to-click = true             # [default: true]      [type: bool]  Tapping on the touchpad with 1, 2, or 3 fingers will send LMB, RMB, and MMB respectively.
    drag_lock = false               # [default: false]     [type: bool]  When enabled, lifting the finger off for a short time while dragging will not drop the dragged item. libinput#tap-and-drag
    tap-and-drag = false            # [default: false]     [type: bool]  Sets the tap and drag mode for the touchpad
  }

  touchdevice {
    transform = 0      # [default: 0]         [type: int]    Transform the input from touchdevices. The possible transformations are the same as those of the monitors
    output =           # [default: [[Empty]]] [type: string] The output to bind touch devices. Empty means unset and will use the current / autodetected.
  }

}

# Example per-device config
# For more, see https://wiki.hyprland.org/Configuring/Keywords/#executing
# device:epic mouse V1 {
#     sensitivity = -0.5
# }
#
# device:--usb-keyboard-system-control {
#   kb_layout = us,ru
# }

gestures {
  # For more, see https://wiki.hyprland.org/Configuring/Variables/
  workspace_swipe = true                  # [default: false] [type: bool]  Enable workspace swipe gesture
  workspace_swipe_fingers = 3             # [default: 3]     [type: int]   How many fingers for the gesture
  workspace_swipe_distance = 300          # [default: 300]   [type: int]   In px, the distance of the gesture
  workspace_swipe_invert = true           # [default: true]  [type: bool]  Invert the direction
  workspace_swipe_min_speed_to_force = 30 # [default: 30]    [type: int]   Minimum speed in px per timepoint to force the change ignoring cancel_ratio. Setting to 0 will disable this mechanic.
  workspace_swipe_cancel_ratio = 0.5      # [default: 0.5]   [type: float] (0.0 - 1.0) How much the swipe has to proceed in order to commence it. (0.7 -> if > 0.7 * distance, switch, if less, revert)
  workspace_swipe_create_new = true       # [default: true]  [type: bool]  Whether a swipe right on the last workspace should create a new one.
  workspace_swipe_forever = false         # [default: false] [type: bool]  If enabled, swiping will not clamp at the neighboring workspaces but continue to the further ones.
  workspace_swipe_numbered = false        # [default: false] [type: bool]  If enabled, swiping will swipe on consecutive numbered workspaces.
  workspace_swipe_use_r = false           # [default: false] [type: bool]  If enabled, swiping will use the r prefix instead of the m prefix for finding workspaces. (requires disabled workspace_swipe_numbered)
}

misc {
  disable_hyprland_logo = true               # [default: false]      [type: bool]  Disables the hyprland logo background. :(
  disable_splash_rendering = false           # [default: false]      [type: bool]  Disables the hyprland splash rendering. (requires a monitor reload to take effect)
  vfr = true                                 # [default: true]       [type: bool]  Controls the VFR status of hyprland. Heavily recommended to leave on true to conserve resources.
  vrr = 1                                    # [default: 0]          [type: int]   Controls the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only
  mouse_move_enables_dpms = false            # [default: false]      [type: bool]  If DPMS is set to off, wake up the monitors if the mouse moves.
  key_press_enables_dpms = false             # [default: false]      [type: bool]  If DPMS is set to off, wake up the monitors if a key is pressed.
  always_follow_on_dnd = true                # [default: true]       [type: bool]  Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0.
  layers_hog_keyboard_focus = true           # [default: true]       [type: bool]  If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)
  animate_manual_resizes = false             # [default: false]      [type: bool]  If true, will animate manual window resizes/moves
  animate_mouse_windowdragging = false       # [default: false]      [type: bool]  If true, will animate windows being dragged by mouse, note that this can cause weird behavior on some curves
  disable_autoreload = false                 # [default: false]      [type: bool]  If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.
  enable_swallow = true                      # [default: false]      [type: bool]  Enable window swallowing
  swallow_regex = ^(footclient|St|kitty|Alacritty)$    # [default: [[Empty]]]  [type: str]   The class regex to be used for windows that should be swallowed (usually, a terminal). To know more about the list of regex which can be used use this cheatsheet.
  swallow_exception_regex = (^wev$|\[DEBUG\]) # [default: [[Empty]]]  [type: str]   The title regex to be used for windows that should not be swallowed by the windows specified in swallow_regex (e.g. wev). The regex is matched against the parent (e.g. Kitty) window’s title on the assumption that it changes to whatever process it’s running.
  focus_on_activate = false                  # [default: false]      [type: bool]  Whether Hyprland should focus an app that requests to be focused (an activate request)
  no_direct_scanout = true                   # [default: true]       [type: bool]  Disables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game). It is also recommended to set this to true if the fullscreen application shows graphical glitches.
  hide_cursor_on_touch = true                # [default: true]       [type: bool]  Hides the cursor when the last input was a touch input until a mouse input is done.
  mouse_move_focuses_monitor = true          # [default: true]       [type: bool]  Whether mouse moving into a different monitor should focus it
  suppress_portal_warnings = false           # [default: false]      [type: bool]  Disables warnings about incompatible portal implementations.
  render_ahead_of_time = false               # [default: false]      [type: bool]  [Warning: buggy] starts rendering before your monitor displays a frame in order to lower latency
  render_ahead_safezone = 1                  # [default: 1]          [type: int]   How many ms of safezone to add to rendering ahead of time. Recommended 1-2.
  cursor_zoom_factor = 1.0                   # [default: 1.0]        [type: float] The factor to zoom by around the cursor. AKA. Magnifying glass. Minimum 1.0 (meaning no zoom)
  cursor_zoom_rigid = false                  # [default: false]      [type: bool]  Whether the zoom should follow the cursor rigidly (cursor is always centered if it can be) or loosely
  allow_session_lock_restore = false         # [default: false]      [type: bool]  If true, will allow you to restart a lockscreen app in case it crashes (red screen of death)
  render_titles_in_groupbar = true           # [default: true]       [type: bool]  Whether to render titles in the group bar decoration
  groupbar_titles_font_size = 8              # [default: 8]          [type: int]   Font size for the above
  groupbar_gradients = true                  # [default: true]       [type: bool]  Whether to draw gradients under the titles of the above
  groupbar_text_color = 0xffffffff           # [default: 0xffffffff] [type: color] Controls the group bar text color
}

binds {
  pass_mouse_when_bound = false    # [default: false] [type: bool] If disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered.
  scroll_event_delay = 1           # [default: 300]   [type: int] In ms, how many ms to wait after a scroll event to allow to pass another one for the binds.
  workspace_back_and_forth = false # [default: false] [type: bool] If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth.
  allow_workspace_cycles = false   # [default: false] [type: bool] If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace.
  focus_preferred_method = 0       # [default: 0]     [type: int] Sets the preferred focus finding method when using focuswindow/movewindow/etc with a direction. 0 - history (recent have priority), 1 - length (longer shared edges have priority)
}

xwayland {
  use_nearest_neighbor = true # [default: true]  [type: bool] Uses the nearest neigbor filtering for xwayland apps, making them pixelated rather than blurry
  force_zero_scaling = false  # [default: false] [type: bool] Forces a scale of 1 on xwayland windows on scaled displays.
}

debug {
  overlay = false            # [default: false] [type: bool] Print the debug performance overlay. Disable VFR for accurate results.
  damage_blink = false       # [default: false] [type: bool] (epilepsy warning!) Flash areas updated with damage tracking
  disable_logs = false       # [default: false] [type: bool] Disable logging
  disable_time = true        # [default: true]  [type: bool] Disables time logging
  damage_tracking = 2        # [default: 2]     [type: int]  Redraw only the needed bits of the display. Do not change. (default: full - 2) monitor - 1, none - 0
  enable_stdout_logs = false # [default: false] [type: bool] Enables logging to stdout
  manual_crash = 0           # [default: 0]     [type: int]  Set to 1 and then back to 0 to crash Hyprland.
}

### LAYOUTS                                  =======================================

dwindle {
  # For more, see https://wiki.hyprland.org/Configuring/Dwindle-Layout/
  pseudotile = true                    # [default: false] [type: bool]  Enable pseudotiling. Pseudotiled windows retain their floating size when tiled.
  force_split = 0                      # [default: 0]     [type: int]   0 -> Split follows mouse, 1 -> always split to the left (new = left or top) 2 -> always split to the right (new = right or bottom)
  preserve_split = true                # [default: false] [type: bool]  If enabled, the split (side/top) will not change regardless of what happens to the container.
  permanent_direction_override = false # [default: false] [type: bool]  If enabled, makes the preselect direction persist until either this mode is turned off, another direction is specified, or a non-direction is specified (anything other than l,r,u/t,d/b)
  special_scale_factor = 0.8           # [default: 0.8]   [type: float] 0-1 -> Specifies the scale factor of windows on the special workspace
  split_width_multiplier = 1.0         # [default: 1.0]   [type: float] Specifies the auto-split width multiplier
  no_gaps_when_only = false            # [default: false] [type: bool]  Whether to apply gaps when there is only one window on a workspace, aka. smart gaps.
  use_active_for_splits = true         # [default: true]  [type: bool]  Whether to prefer the active window or the mouse position for splits
  default_split_ratio = 1.0            # [default: 1.0]   [type: float] The default split ratio on window open. 1 means even 50/50 split. 0.1 - 1.9
}

master {
  # For more, see https://wiki.hyprland.org/Configuring/Master-Layout/
  allow_small_split = false    # [default: false] [type: bool]   Enable adding additional master windows in a horizontal split style
  special_scale_factor = 0.8   # [default: 0.8]   [type: float]  (0.0 - 1.0) The scale of the special workspace windows
  mfact = 0.55                 # [default: 0.55]  [type: float]  (0.0 - 1.0) Master split factor, the ratio of master split
  new_is_master = false        # [default: true]  [type: bool]   Whether a newly open window should replace the master or join the slaves.
  new_on_top = false           # [default: false] [type: bool]   Whether a newly open window should be on the top of the stack
  no_gaps_when_only = false    # [default: false] [type: bool]   Whether to apply gaps when there is only one window on a workspace, aka. smart gaps.
  orientation = left           # [default: left]  [type: string] Default placement of the master area, can be left, right, top, bottom or center
  inherit_fullscreen = true    # [default: true]  [type: bool]   Inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)
  always_center_master = false # [default: false] [type: bool]   When using orientation=center, keep the master window centered, even when it is the only window in the workspace.
}

### WINDOW RULES                             =======================================

# For more, see https://wiki.hyprland.org/Configuring/Window-Rules/

# Window Rule v1
# windowrule = RULE,WINDOW
# Window Rule v2
# windowrulev2 = RULE,MATCH[,MATCH...]

# Transparent terminals
#windowrulev2 = opacity 0.9 override 0.9 override,class:^(St|footclient|foot|Alacritty|kitty)$

# Make Neovim always opaque
#windowrulev2 = opacity 1.0 override 1.0 override, title:NeoVim$

# FIXME Prevent stuff from fullscreening/contain fullscreens inside of the window
#windowrulev2 = fakefullscreen,      class:^(mpv|firefox)$
#windowrulev2 = nofullscreenrequest, class:^(mpv|firefox)$

# Telegram media viewer - fix animations (tiling by default resizes windows)
$telegramMatch = class:org.telegram.desktop, title:^Media viewer$
windowrulev2 = float,   $telegramMatch
windowrulev2 = center,  $telegramMatch
windowrulev2 = noanim,  $telegramMatch

# Telegram pop-up media viewer - location
# FIXME: $telegramPopupMatch does not match
$telegramPopupMatch = class:org.telegram.desktop,title:^TelegramDesktop$,floating:1
windowrulev2 = float, $telegramPopupMatch
windowrulev2 = move 1500 160, $telegramPopupMatch
windowrulev2 = noborder, $telegramPopupMatch

# Put telegram to workspace 9
windowrulev2 = workspace 9 silent, class:org.telegram.desktop

# scr screenshotting utility - fix animations (tiling by default resizes windows)
$scrMatch = class:imv, title:^scr$
windowrulev2 = float, $scrMatch
windowrulev2 = noanim, $scrMatch

# `zet graph`
windowrulev2 = tile, class:^Graphviz$

# xdg-desktop-portal-termfilechooser
windowrulev2 = float, title:ranger-filechooser

# Firefox Discord
windowrulev2 = idleinhibit always,title:Discord

# Syncplay pseudotile (not supported now for windows that force their sizes.)
windowrulev2 = pseudo, class:syncplay
windowrulev2 = tile, class:syncplay

### KEY BINDINGS / MAPPINGS / SHORTCUTS      ======================================

# For more, see https://wiki.hyprland.org/Configuring/Binds/
#               https://wiki.hyprland.org/Configuring/Keywords/
#               https://wiki.hyprland.org/Configuring/Dispatchers/

# Launch terminal
bind = $myMod SHIFT, return, exec, $myTerminal

# Launch an app
bind = $myMod, p, exec, bemenu-run

# Close focused
bind = $myMod, backspace, killactive, 

# Float/Unfloat focused
bind = $myMod, f, togglefloating

# Move focus with myMod + arrow keys
bind = $myMod, h, movefocus, l
bind = $myMod, l, movefocus, r
bind = $myMod, k, movefocus, u
bind = $myMod, j, movefocus, d

# Cycle through windows with myMod + tab
bind = $myMod, TAB, cyclenext,
bind = $myMod SHIFT, TAB, cyclenext, prev

# Change splitratio with myMod + shift + h/l
binde = $myMod SHIFT, h, resizeactive, -15 0
binde = $myMod SHIFT, l, resizeactive, 15 0
binde = $myMod SHIFT, j, resizeactive, 0 15
binde = $myMod SHIFT, k, resizeactive, 0 -15

# Move windows with myMod + ctrl + hjkl
bind = $myMod CTRL, h, movewindow, l
bind = $myMod CTRL, l, movewindow, r
bind = $myMod CTRL, k, movewindow, u
bind = $myMod CTRL, j, movewindow, d

# Switch workspaces with myMod + [0-9]
bind = $myMod, 1, workspace, 1
bind = $myMod, 2, workspace, 2
bind = $myMod, 3, workspace, 3
bind = $myMod, 4, workspace, 4
bind = $myMod, 5, workspace, 5
bind = $myMod, 6, workspace, 6
bind = $myMod, 7, workspace, 7
bind = $myMod, 8, workspace, 8
bind = $myMod, 9, workspace, 9
bind = $myMod, 0, workspace, 10

# Move active window to a workspace with myMod + SHIFT + [0-9]
bind = $myMod SHIFT, 1, movetoworkspacesilent, 1
bind = $myMod SHIFT, 2, movetoworkspacesilent, 2
bind = $myMod SHIFT, 3, movetoworkspacesilent, 3
bind = $myMod SHIFT, 4, movetoworkspacesilent, 4
bind = $myMod SHIFT, 5, movetoworkspacesilent, 5
bind = $myMod SHIFT, 6, movetoworkspacesilent, 6
bind = $myMod SHIFT, 7, movetoworkspacesilent, 7
bind = $myMod SHIFT, 8, movetoworkspacesilent, 8
bind = $myMod SHIFT, 9, movetoworkspacesilent, 9
bind = $myMod SHIFT, 0, movetoworkspacesilent, 10

# Cycle through existing workspaces with myMod + scroll or i/o
binde = $myMod, i, workspace, -1
binde = $myMod, o, workspace, +1

# Move/resize windows with myMod + LMB/RMB and dragging
bindm = $myMod, mouse:272, movewindow
bindm = $myMod, mouse:273, resizewindow

# General layout keys

# Monocle view
bind = $myMod, SPACE, fullscreen, 1
bind = $myMod SHIFT, SPACE, fullscreen, 0

# Contain fullscreen inside window - manual toggle
bind = $myMod SHIFT, f, fakefullscreen,

# Dwindle layout keys

# Pseudotile the window (respect it's floating size hints)
bind = $myMod, BRACKETRIGHT, pseudo, # dwindle

# Combine current window and it's siblings into a tabbed group
bind = $myMod, t, togglegroup 
# Tabbed group - switch tabs
bind = $myMod SHIFT, i, changegroupactive, b     
bind = $myMod SHIFT, o, changegroupactive, f

# Rotate split 90° 
bind = $myMod, BRACKETLEFT, togglesplit, 

bind=SUPER, mouse_up, exec, zoom out
bind=SUPER, mouse_down, exec, zoom in
bind=SUPER, ESCAPE, exec, zoom 1.0

# Load wal colors if awailable
# SAFETY: can possibly break if XDG_CONFIG_HOME contains spaces? dunno how to quote this.
exec = hyprctl keyword source ${XDG_CACHE_HOME}/wal/hyprland.conf

# vim:ft=hyprlang
