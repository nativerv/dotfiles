# bindkey -e will be emacs mode
bindkey -v
export KEYTIMEOUT=1

# Use vim keys in tab complete menu:
bindkey -M menuselect '^H' vi-backward-char
bindkey -M menuselect '^K' vi-up-line-or-history
bindkey -M menuselect '^L' vi-forward-char
bindkey -M menuselect '^J' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Scroll through autosuggestions in normal mode
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search

# Enable vim-surround in zsh
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -a cs change-surround
bindkey -a ds delete-surround
bindkey -a ys add-surround
bindkey -M visual S add-surround

# Yank/Put to/from the system clipboard
function vi-yank-xclip {
  zle vi-yank
  echo "$CUTBUFFER" | xclip -in -selection clipboard
}

function vi-put-before-xclip {
  RBUFFER="$(xclip -out -selection clipboard)""$RBUFFER"
}

function vi-put-after-xclip {
  RBUFFER="$RBUFFER""$(xclip -out -selection clipboard)"
}

zle -N vi-yank-xclip
zle -N vi-put-before-xclip
zle -N vi-put-after-xclip

bindkey -M vicmd 'y' vi-yank-xclip
bindkey -M vicmd 'P' vi-put-before-xclip
bindkey -M vicmd 'p' vi-put-after-xclip

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select

# Initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
zle-line-init() {
    zle -K viins 
    echo -ne "\e[5 q"
}
zle -N zle-line-init

# Use beam shape cursor on startup.
echo -ne '\e[5 q' 
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
