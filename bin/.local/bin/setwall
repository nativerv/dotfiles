#!/bin/sh

# This script does the following:
#	setwall                ->  set the wallpaper (at X start).
#	setwall <file>         ->  set that as the new wallpaper.
#	setwall <directory>    ->  choose random file in it.
#	[ wal is installed ? ] -+> also generate and set a wal colorscheme.

help () {
  echo "usage: ${1} [-s saturation] file"
  echo ""
  echo "-s saturation\tspecify wal saturation"
  echo "--help\tprint this message"
}

saturation='0.5'

while getopts 's:' option
do case "${option}" in
         s)	saturation="${OPTARG}" ;;
    # --help) help "$@" ;;
       [?]) help "$@"; exit 1 ;;
  esac
done

shift $(($OPTIND - 1))

# Location of link to wallpaper link.
bgloc="${XDG_DATA_HOME:-$HOME/.local/share/}/wallpaper"

trueloc="$(readlink -f "$1")" &&
case "$(file --mime-type -b "$trueloc")" in
	image/* ) ln -sf "$(readlink -f "$1")" "$bgloc" && notify-send -i "$bgloc" "Changing wallpaper..." ;;
	inode/directory ) ln -sf "$(find "$trueloc" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" && notify-send -i "$bgloc" "Random Wallpaper chosen." ;;
	*) notify-send "Error" "Not a valid image." ; exit 1;;
esac

# If pywal is installed, use it.
command -v wal >/dev/null 2>&1 || exit 0

# >/dev/null 2>&1
wal --saturate "${saturation}" -i "$trueloc" -o "${XDG_CONFIG_HOME:-$HOME/.config}/wal/postrun"  || (echo 'Error running `wal`'; exit 1)
pidof nvim >/dev/null && killall -USR1 nvim
pidof dwm >/dev/null && xdotool key super+F12

xwallpaper --zoom "$bgloc"
